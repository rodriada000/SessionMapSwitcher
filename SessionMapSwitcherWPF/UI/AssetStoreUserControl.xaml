<UserControl x:Class="SessionModManagerWPF.UI.AssetStoreUserControl"
             x:Name="ctrlAssetStore"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SessionModManagerWPF.UI"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="900">
    <UserControl.Resources>
        <Style TargetType="CheckBox" BasedOn="{StaticResource MainCheckboxStyle}">
            <Setter Property="Margin" Value="0,0,10,0"/>
        </Style>

        <Style TargetType="{x:Type ListViewItem}" x:Key="AssetListStyle" BasedOn="{StaticResource PrimaryListViewItemStyle}">
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsOutOfDate}" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource AccentColor}" Opacity="0.5"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PreviewTextStyle" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedAsset.IsOutOfDate}" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="Red" Opacity="0.75"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <DataTemplate x:Key="AuthorComboBoxContentTemplate">
            <Grid x:Name="gd" DataContext="{Binding ElementName=ctrlAssetStore, Path=DataContext}" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.AuthorToFilterBy.Author, FallbackValue='Author Name'}" 
                           FontSize="{Binding RelativeSource={RelativeSource AncestorType=ComboBox, Mode=FindAncestor}, Path=FontSize}"
                           HorizontalAlignment="Stretch"
                           Padding="0,2,0,2"
                           Margin="4,0,0,0"/>
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.AuthorToFilterBy.AssetCountDisplayText, FallbackValue='(4)'}" 
                           FontSize="{Binding RelativeSource={RelativeSource AncestorType=ComboBox, Mode=FindAncestor}, Path=FontSize}"
                           Grid.Column="1" 
                           HorizontalAlignment="Right"
                           Padding="0,2,0,2"
                           Margin="0,0,30,0"/>
            </Grid>
        </DataTemplate>

        <Style TargetType="{x:Type ComboBoxItem}" x:Key="AuthorComboBoxItemStyle" BasedOn="{StaticResource DefaultComboBoxItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Bd" BorderThickness="1" CornerRadius="1">
                            <Grid x:Name="gd">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Author, FallbackValue='Author Name'}" 
                                           HorizontalAlignment="Stretch"
                                           Padding="0,2,0,2"
                                           Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding AssetCountDisplayText, FallbackValue='(4)'}" 
                                           Grid.Column="1" 
                                           HorizontalAlignment="Right"
                                           Padding="0,2,0,2"
                                           Margin="0,0,10,0"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="gd" Property="IsMouseOver" Value="True">
                                <Setter TargetName="gd" Property="Background" Value="{StaticResource AccentOverlayBrush}"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ControlMouseOverBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                   
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="AuthorComboBoxStyle" BasedOn="{StaticResource ComboBoxDefaultStyle}">
            <Setter Property="ItemTemplate" Value="{StaticResource AuthorComboBoxContentTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource AuthorComboBoxItemStyle}"/>
        </Style>

    </UserControl.Resources>

    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.25*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>


        <GroupBox Grid.Row="0" Grid.Column="0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom"
                  Margin="5,5,0,10"
                  Header="Categories">
            <Grid VerticalAlignment="Bottom" Margin="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" Content="All" IsChecked="{Binding DisplayAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Column="1" Content="Maps" IsChecked="{Binding DisplayMaps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Column="2" Content="Decks" IsChecked="{Binding DisplayDecks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Column="3" Content="Griptapes" IsChecked="{Binding DisplayGriptapes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Column="4" Content="Trucks" IsChecked="{Binding DisplayTrucks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Column="5" Content="Meshes" IsChecked="{Binding DisplayMeshes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <CheckBox Grid.Row="2" Grid.Column="0" Content="Wheels" IsChecked="{Binding DisplayWheels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Row="2" Grid.Column="1" Content="Hats" IsChecked="{Binding DisplayHats, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Row="2" Grid.Column="2" Content="Shirts" IsChecked="{Binding DisplayShirts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Row="2" Grid.Column="3" Content="Pants" IsChecked="{Binding DisplayPants, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Row="2" Grid.Column="4" Content="Shoes" IsChecked="{Binding DisplayShoes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox Grid.Row="2" Grid.Column="5" Content="Characters" IsChecked="{Binding DisplayCharacters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </GroupBox>

        <TextBox x:Name="txtSearch"
                 Grid.Row="1"
                 Height="25"
                 VerticalContentAlignment="Center"
                 Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 TextWrapping="NoWrap"
                 Margin="5,1,0,0"/>

        <TextBlock Text="Type to search by Name or Description (only searches checked Categories)..."
                   Grid.Row="1"
                   Foreground="Gray"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   IsHitTestVisible="False"
                   TextWrapping="NoWrap"
                   Margin="10,0,0,0">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Hidden"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SearchText}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <ListView x:Name="lstAssets"
                  Grid.Row="2" Grid.Column="0"
                  GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  SelectionMode="Single"
                  ItemsSource="{Binding FilteredAssetList}"
                  ItemContainerStyle="{StaticResource AssetListStyle}"
                  SelectedItem="{Binding SelectedAsset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Margin="5,5,0,5">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" Width="190" DisplayMemberBinding="{Binding Name}"/>
                    <GridViewColumn Header="Author" Width="100" DisplayMemberBinding="{Binding Author}"/>
                    <GridViewColumn Header="Category" Width="95" DisplayMemberBinding="{Binding Category}"/>
                    <GridViewColumn Header="Updated Date" Width="130" DisplayMemberBinding="{Binding UpdatedDate}"/>
                    <GridViewColumn Header="Ver." Width="40" DisplayMemberBinding="{Binding Version}"/>
                </GridView>
            </ListView.View>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="menuItemBrowserDownload" Header="Download in Browser ..." Click="menuItemBrowserDownload_Click"/>
                    <MenuItem Style="{StaticResource ContextMenuSeperator}"/>
                    <MenuItem x:Name="menuItemFetchImages" 
                              IsEnabled="{Binding IsNotDownloadingAllImages}"
                              Header="Fetch All Preview Images" 
                              Click="menuItemFetchImages_Click" 
                              ToolTip="Download all preview images for assets listed."/>
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>


        <ListView x:Name="lstDownloads" 
                  Grid.Row="3" 
                  Margin="5,0,0,5"
                  ItemContainerStyle="{StaticResource PrimaryListViewItemStyle}"
                  ItemsSource="{Binding CurrentDownloads, UpdateSourceTrigger=PropertyChanged}"
                  SelectionMode="Single"
                  MinHeight="125"
                  MaxHeight="125">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="menuItemCancelDownload" Header="Cancel Selected Download" Click="menuItemCancelDownload_Click"/>
                    <MenuItem Style="{StaticResource ContextMenuSeperator}"/>
                    <MenuItem x:Name="menuItemCancelAll" Header="Cancel All Downloads" Click="menuItemCancelAll_Click"/>

                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Item" Width="200" DisplayMemberBinding="{Binding ItemName, FallbackValue='item text'}"/>
                    <GridViewColumn x:Name="colProgress" Header="Progress" Width="200">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ProgressBar Value="{Binding PercentComplete, FallbackValue='50'}" Width="{Binding ElementName=colProgress, Path=ActualWidth}" Height="10"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Speed" Width="100" DisplayMemberBinding="{Binding DownloadSpeed, FallbackValue='32.5 kb/s'}"/>
                </GridView>
            </ListView.View>
        </ListView>


        <GroupBox Grid.Row="1" Grid.Column="1"
                  Grid.RowSpan="3"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Margin="5,0,5,5"
                  Header="Selected Asset Preview">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0,0,0,10">
                    <StackPanel>
                        <WrapPanel Margin="0,0,0,0">
                            <TextBlock Text="Author:"
                                       Margin="5,5,5,0"
                                       FontWeight="Bold"/>
                            <TextBlock Text="{Binding SelectedAuthor, FallbackValue='Author name'}"
                                       Style="{StaticResource PreviewTextStyle}"
                                       TextWrapping="Wrap"
                                       Margin="5,5,0,0"/>
                        </WrapPanel>

                        <TextBlock Text="Description:" 
                                   Margin="5,5,5,0"
                                   FontWeight="Bold"/>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden"
                                      MaxHeight="200">
                            <TextBlock Text="{Binding SelectedDescription, FallbackValue='example description for a selected asset.'}"
                                       Style="{StaticResource PreviewTextStyle}"
                                       TextWrapping="Wrap"
                                       Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GroupBox}, Path=ActualWidth}"
                                       Margin="5,5,0,0" 
                                       Padding="0,0,10,0"/>
                        </ScrollViewer>
                    </StackPanel>
                    
                </ScrollViewer>




                <Image Source="{Binding PreviewImageSource}" Margin="5,0,5,5"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Grid.Row="1"
                       RenderOptions.BitmapScalingMode="HighQuality">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoadingImage, FallbackValue='False'}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <TextBlock Text="Loading Preview Image ..."
                           Grid.Row="1"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoadingImage, FallbackValue='True'}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>


                <WrapPanel Grid.Row="2" 
                           HorizontalAlignment="Right" 
                           VerticalAlignment="Bottom"
                           Margin="0,0,5,25">
                    <Button x:Name="btnRemove"
                            ToolTip="Delete the files related to this asset from your game."
                            Content="{Binding RemoveButtonText, FallbackValue='Remove Asset'}"
                            IsEnabled="{Binding IsRemoveButtonEnabled}"
                            Click="btnRemove_Click"
                            Margin="0,0,5,0"
                            Padding="5">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MainButtonStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRemoveButtonEnabled}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="btnInstall"
                            Content="{Binding InstallButtonText, FallbackValue='Install Asset'}"
                            IsEnabled="{Binding IsInstallButtonEnabled}"
                            Click="btnInstall_Click"
                            Padding="5"/>
                    
                </WrapPanel>

                <CheckBox x:Name="chkDeleteAfterDownload" 
                          Grid.Row="2"
                          FontSize="10"
                          HorizontalAlignment="Right" 
                          VerticalAlignment="Bottom"
                          Margin="0,0,5,5"
                          Content="Delete Download After Install" 
                          ToolTip="Downloaded assets are saved to 'store_data/temp_downloads' and are deleted to save space... Uncheck to keep downloaded file(s)."
                          IsChecked="{Binding DeleteDownloadAfterInstall, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


            </Grid>
        </GroupBox>

        <StackPanel Grid.Column="1"
                    Margin="5,15,0,10"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top">
            <Label Content="Author:" Padding="0"/>
            <ComboBox Width="145" 
                      Margin="0,1,0,5"
                      FontSize="11"
                      ToolTip="Choose an Author to filter by"
                      ItemsSource="{Binding AuthorList}"
                      Style="{StaticResource AuthorComboBoxStyle}"
                      SelectedValue="{Binding AuthorToFilterBy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </ComboBox>

            <Label Content="Install Status:" Padding="0"/>
            <ComboBox Width="145" 
                      FontSize="11"
                      ToolTip="Filter by installed or not installed"
                      ItemsSource="{Binding InstallStatusList}"
                      Style="{StaticResource ComboBoxDefaultStyle}"
                      SelectedItem="{Binding SelectedInstallStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        </StackPanel>

        <WrapPanel Grid.Column="1"
                    Margin="0,0,5,10"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">

            <Button x:Name="btnRefresh"
                    Style="{StaticResource ButtonIcon}"
                    Tag="Refresh"
                    Width="64"
                    Height="32"
                    Margin="0,0,0,0"
                    Content="Refresh Assets"
                    IsEnabled="{Binding IsNotLoadingManifests}"
                    ToolTip="Download the latest asset catalogs and refresh."
                    Click="btnRefresh_Click"
                    Padding="5,2,5,2"/>

            <Button x:Name="btnManageCat"
                    Style="{StaticResource ButtonIcon}"
                    Tag="BookOpenText"
                    Width="64"
                    Height="32"
                    ToolTip="Add, remove, or create asset catalogs."
                    Click="btnManageCat_Click"
                    Margin="5,0,0,0"
                    Padding="5,3,5,3"/>
        </WrapPanel>
    </Grid>
</UserControl>
