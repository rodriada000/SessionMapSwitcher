<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:local="using:SessionModManagerAvalonia.Classes"
			 xmlns:v="using:SessionModManagerCore.ViewModels"
			 xmlns:i="https://github.com/projektanker/icons.avalonia"
			 x:DataType="v:MapSelectionViewModel"
             mc:Ignorable="d" d:DesignWidth="900" d:DesignHeight="450"
             x:Class="SessionModManagerAvalonia.MapSelectionUserControl">
	<UserControl.Resources>
		<local:StreamToBitmapConverter x:Key="streamConverter"/>
	</UserControl.Resources>
	<UserControl.Styles>
		<Style Selector="TextBlock.v1">
			<Setter Property="IsVisible" Value="True"/>
		</Style>
		<Style Selector="TextBlock.hide">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
	</UserControl.Styles>
	<Grid RowDefinitions="auto,*,auto" ColumnDefinitions="*,1.5*">


		<!--PATH TO SESSION TEXTBOX AND BUTTONS-->
		<Button Name="btnBrowseSessionPath"
                i:Attached.Icon="mdi-folder-search-outline"
                IsEnabled="{Binding InputControlsEnabled}"
                VerticalAlignment="Top" HorizontalAlignment="Left"
                Margin="10,10,18,0"
                Height="32" Width="32"
                Click="BtnBrowseSessionPath_Click"/>

		<TextBox x:Name="txtSessionPath"
                 Grid.Column="0" Grid.ColumnSpan="2"
				 Watermark="Enter Path to Session: [PathToSteam]\steamapps\common\Session"
                 VerticalAlignment="Stretch"
                 HorizontalAlignment="Stretch"
                 Text="{Binding SessionPathTextInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 IsEnabled="{Binding InputControlsEnabled}"
                 KeyUp="TxtSessionPath_KeyUp"
                 Margin="45,10,10,0"
				 DragDrop.AllowDrop="True"
                 ContextMenu="{Binding ElementName=mainContextMenu}"/>




		<!--AVAILABLE MAPS GROUPBOX-->
		<Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,5,5,3">

			<Grid RowDefinitions="auto,*,auto">

				<WrapPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5" >

					<Button x:Name="btnReloadMaps"
                            Click="BtnReloadMaps_Click"
                            IsEnabled="{Binding InputControlsEnabled}"
                            Content="Reload Maps"
                            FontSize="11"/>


					<Button x:Name="btnImportMap"
                            IsEnabled="{Binding InputControlsEnabled}"
                            Content="Import Map"
                            Click="BtnImportMap_Click"
                            Margin="5,0,0,0"
                            FontSize="11">
					</Button>

					<CheckBox x:Name="chkShowInvalidMaps"
                              Content="Show Invalid/Hidden Maps"
                              IsChecked="{Binding ShowInvalidMapsIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue='True'}"
                              Click="ChkShowInvalidMaps_Click"
                              FontSize="10"
                              Margin="5,5,0,4"
                              VerticalAlignment="Center"/>
				</WrapPanel>


				<ListBox x:Name="lstMaps"
                         Grid.Row="1"
                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         MinWidth="300"
                         Margin="4,1,5,5"
                         ItemsSource="{Binding FilteredAvailableMaps}"
                         SelectionChanged="lstMaps_SelectionChanged"
                         >
					<ListBox.ContextMenu>
						<ContextMenu x:Name="mainContextMenu" Opening="ContextMenu_Opening">
							<MenuItem x:Name="menuSecondMapToLoad" Header="Set Selected Map To Load Next"  Click="menuSecondMapToLoad_Click" />
							<MenuItem x:Name="menuReimporSelectedMap" Header="Re-import Selected Map"  Click="MenuReimporSelectedMap_Click"/>
							<MenuItem x:Name="menuRenameSelectedMap" Header="Rename Selected Map"  Click="MenuRenameSelectedMap_Click" />
							<MenuItem x:Name="menuHideSelectedMap" Header="Hide Selected Map"  Click="MenuHideSelectedMap_Click" />
							<MenuItem x:Name="menuDeleteSelectedMap" Header="Delete Selected Map"  Click="menuDeleteSelectedMap_Click" />
							<MenuItem Classes="ContextMenuSeperator"/>
							<MenuItem x:Name="menuOpenSessionFolder" Header="Open Session Folder ..."  Click="MenuOpenSessionFolder_Click"/>
							<MenuItem x:Name="menuOpenMapsFolder" Header="Open Content Folder ..." Click="MenuOpenMapsFolder_Click"/>
							<MenuItem x:Name="menuOpenSaveFolder" Header="Open Save Folder ..." Click="menuOpenSaveFolder_Click"/>
							<MenuItem x:Name="menuOpenSelectedMapFolder" Header="Open Selected Map Folder ..." Click="MenuOpenSelectedMapFolder_Click"/>
							<MenuItem Classes="ContextMenuSeperator"/>
							<MenuItem x:Name="menuOpenReadme" Header="View Help ..." Click="MenuOpenReadme_Click"/>
						</ContextMenu>
					</ListBox.ContextMenu>
					<ListBox.ItemTemplate>
						<DataTemplate DataType="v:MapListItem">
							<Border DoubleTapped="MapListItem_DoubleTapped" Padding="2,8,2,8" Background="Transparent" x:Name="border" IsEnabled="{Binding IsEnabled}" IsHitTestVisible="True">
								<WrapPanel  IsHitTestVisible="True" >
									<TextBlock x:Name="mapText" Text="{Binding DisplayName, FallbackValue='Test Map Name'}"
												Margin="5,0,0,0"
												Padding="0,2,0,2"/>
									<i:Icon Margin="5,0,0,0" FontSize="20" Value="mdi-map-marker-check-outline" IsVisible="{Binding IsLoaded}"/>
									<TextBlock x:Name="validationText"
												Foreground="Red"
												Text="{Binding ValidationHint, FallbackValue='(missing game mode)'}"
												IsVisible="False"
												FontSize="11"
												Margin="10,2,0,0"/>
								</WrapPanel>
							</Border>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<ListBox.Styles>
						<Style Selector="ListBoxItem" x:DataType="v:MapListItem">
							<Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
							<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
							<Setter Property="VerticalAlignment" Value="Stretch"/>
							<Setter Property="Padding" Value="0"/>
							<Setter Property="IsHitTestVisible" Value="True"/>
						</Style>
					</ListBox.Styles>
				</ListBox>
			</Grid>

		</Grid>


		<Grid Grid.Row="1"
                  Grid.Column="1"
                  Margin="0,58,0,3">
			<Grid RowDefinitions="*,auto">
				<Image Source="{Binding MapPreviewSource, Converter={StaticResource streamConverter}}" Margin="6"
                       HorizontalAlignment="Stretch"
					   IsVisible="{Binding !IsLoadingImage}"
                       VerticalAlignment="Stretch">
				</Image>

				<TextBlock Text="Loading Preview Image ..."
						   IsVisible="{Binding IsLoadingImage}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
				</TextBlock>
				
				
				<TextBlock Text="No Preview."
						   IsVisible="{Binding IsPreviewMissing}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
				</TextBlock>

				<Grid Grid.Row="1"
                          Margin="5,0,0,5">
					<StackPanel>
						<CheckBox x:Name="chkLoadSecondMap"
                                  FontSize="11"
                                  VerticalContentAlignment="Center"
                                  Margin="1,2,0,-5"
                                  IsChecked="{Binding LoadSecondMapIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Content="{Binding SecondMapCheckboxText, FallbackValue='Load Second Map After Start (Map Name)'}"/>

						<CheckBox x:Name="chkEnableRMSTools"
                                  Margin="1,0,0,0"
								  FontSize="11"
                                  Content="Enable RMS Toolsuite"
								  IsVisible="{Binding Path=RMSToolsuiteCheckboxIsVisible}"
                                  IsChecked="{Binding RMSToolsuiteIsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

					</StackPanel>
				</Grid>

			</Grid>
		</Grid>



		<!--USER MESSAGE AND LOAD/START BUTTONS-->




		<TextBlock x:Name="lblHintMessage"
                           Grid.Row="2"
                           Grid.ColumnSpan="2"
                           Grid.RowSpan="2"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Margin="14,0,0,0"
                           Text="{Binding HintMessage, FallbackValue='Hint: This is a hint shown to the user that changes on app start every time.'}"
                           TextWrapping="Wrap"
                           MaxWidth="600"
                           FontSize="10"/>

		<Button x:Name="btnLoadMap"
                        Grid.Row="2" Grid.ColumnSpan="2"
                        Content="{Binding LoadMapButtonText, FallbackValue='Load Map'}"
                        IsEnabled="{Binding InputControlsEnabled}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        FontSize="16"
                        Margin="0,5,125,5"
                        Click="btnLoadMap_Click" Height="33"/>

		<Button x:Name="btnStartGame"
                        Grid.Row="2" Grid.ColumnSpan="2"
                        Content="Start Session"
                        IsEnabled="{Binding InputControlsEnabled}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        FontSize="16"
                        Margin="0,5,0,5"
                        Click="BtnStartGame_Click" Height="33"/>
	</Grid>



</UserControl>
